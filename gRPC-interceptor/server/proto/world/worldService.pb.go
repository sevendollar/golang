// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: worldService.proto

package worldpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TunaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TunaRequest) Reset() {
	*x = TunaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worldService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunaRequest) ProtoMessage() {}

func (x *TunaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worldService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunaRequest.ProtoReflect.Descriptor instead.
func (*TunaRequest) Descriptor() ([]byte, []int) {
	return file_worldService_proto_rawDescGZIP(), []int{0}
}

type TunaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TunaResponse) Reset() {
	*x = TunaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worldService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunaResponse) ProtoMessage() {}

func (x *TunaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worldService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunaResponse.ProtoReflect.Descriptor instead.
func (*TunaResponse) Descriptor() ([]byte, []int) {
	return file_worldService_proto_rawDescGZIP(), []int{1}
}

func (x *TunaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BeefRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeefRequest) Reset() {
	*x = BeefRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worldService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeefRequest) ProtoMessage() {}

func (x *BeefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worldService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeefRequest.ProtoReflect.Descriptor instead.
func (*BeefRequest) Descriptor() ([]byte, []int) {
	return file_worldService_proto_rawDescGZIP(), []int{2}
}

type BeefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BeefResponse) Reset() {
	*x = BeefResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worldService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeefResponse) ProtoMessage() {}

func (x *BeefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worldService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeefResponse.ProtoReflect.Descriptor instead.
func (*BeefResponse) Descriptor() ([]byte, []int) {
	return file_worldService_proto_rawDescGZIP(), []int{3}
}

func (x *BeefResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_worldService_proto protoreflect.FileDescriptor

var file_worldService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x75,
	0x6e, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x0c, 0x54, 0x75, 0x6e,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x42, 0x65, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x28, 0x0a, 0x0c, 0x42, 0x65, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xec, 0x01, 0x0a,
	0x0c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a,
	0x04, 0x54, 0x75, 0x6e, 0x61, 0x12, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x54, 0x75, 0x6e,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x6c, 0x6c, 0x61,
	0x72, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x2e,
	0x54, 0x75, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x04,
	0x42, 0x65, 0x65, 0x66, 0x12, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x42, 0x65, 0x65, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x42,
	0x65, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e,
	0x3b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_worldService_proto_rawDescOnce sync.Once
	file_worldService_proto_rawDescData = file_worldService_proto_rawDesc
)

func file_worldService_proto_rawDescGZIP() []byte {
	file_worldService_proto_rawDescOnce.Do(func() {
		file_worldService_proto_rawDescData = protoimpl.X.CompressGZIP(file_worldService_proto_rawDescData)
	})
	return file_worldService_proto_rawDescData
}

var file_worldService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_worldService_proto_goTypes = []interface{}{
	(*TunaRequest)(nil),  // 0: github.com.sevendollar.grpcintercept.TunaRequest
	(*TunaResponse)(nil), // 1: github.com.sevendollar.grpcintercept.TunaResponse
	(*BeefRequest)(nil),  // 2: github.com.sevendollar.grpcintercept.BeefRequest
	(*BeefResponse)(nil), // 3: github.com.sevendollar.grpcintercept.BeefResponse
}
var file_worldService_proto_depIdxs = []int32{
	0, // 0: github.com.sevendollar.grpcintercept.WorldService.Tuna:input_type -> github.com.sevendollar.grpcintercept.TunaRequest
	2, // 1: github.com.sevendollar.grpcintercept.WorldService.Beef:input_type -> github.com.sevendollar.grpcintercept.BeefRequest
	1, // 2: github.com.sevendollar.grpcintercept.WorldService.Tuna:output_type -> github.com.sevendollar.grpcintercept.TunaResponse
	3, // 3: github.com.sevendollar.grpcintercept.WorldService.Beef:output_type -> github.com.sevendollar.grpcintercept.BeefResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_worldService_proto_init() }
func file_worldService_proto_init() {
	if File_worldService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_worldService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worldService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worldService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeefRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worldService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeefResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_worldService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_worldService_proto_goTypes,
		DependencyIndexes: file_worldService_proto_depIdxs,
		MessageInfos:      file_worldService_proto_msgTypes,
	}.Build()
	File_worldService_proto = out.File
	file_worldService_proto_rawDesc = nil
	file_worldService_proto_goTypes = nil
	file_worldService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorldServiceClient is the client API for WorldService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldServiceClient interface {
	Tuna(ctx context.Context, in *TunaRequest, opts ...grpc.CallOption) (*TunaResponse, error)
	Beef(ctx context.Context, in *BeefRequest, opts ...grpc.CallOption) (*BeefResponse, error)
}

type worldServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorldServiceClient(cc grpc.ClientConnInterface) WorldServiceClient {
	return &worldServiceClient{cc}
}

func (c *worldServiceClient) Tuna(ctx context.Context, in *TunaRequest, opts ...grpc.CallOption) (*TunaResponse, error) {
	out := new(TunaResponse)
	err := c.cc.Invoke(ctx, "/github.com.sevendollar.grpcintercept.WorldService/Tuna", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldServiceClient) Beef(ctx context.Context, in *BeefRequest, opts ...grpc.CallOption) (*BeefResponse, error) {
	out := new(BeefResponse)
	err := c.cc.Invoke(ctx, "/github.com.sevendollar.grpcintercept.WorldService/Beef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorldServiceServer is the server API for WorldService service.
type WorldServiceServer interface {
	Tuna(context.Context, *TunaRequest) (*TunaResponse, error)
	Beef(context.Context, *BeefRequest) (*BeefResponse, error)
}

// UnimplementedWorldServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorldServiceServer struct {
}

func (*UnimplementedWorldServiceServer) Tuna(context.Context, *TunaRequest) (*TunaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Tuna not implemented")
}
func (*UnimplementedWorldServiceServer) Beef(context.Context, *BeefRequest) (*BeefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Beef not implemented")
}

func RegisterWorldServiceServer(s *grpc.Server, srv WorldServiceServer) {
	s.RegisterService(&_WorldService_serviceDesc, srv)
}

func _WorldService_Tuna_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TunaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServiceServer).Tuna(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.sevendollar.grpcintercept.WorldService/Tuna",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServiceServer).Tuna(ctx, req.(*TunaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorldService_Beef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServiceServer).Beef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.sevendollar.grpcintercept.WorldService/Beef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServiceServer).Beef(ctx, req.(*BeefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorldService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.sevendollar.grpcintercept.WorldService",
	HandlerType: (*WorldServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Tuna",
			Handler:    _WorldService_Tuna_Handler,
		},
		{
			MethodName: "Beef",
			Handler:    _WorldService_Beef_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "worldService.proto",
}
